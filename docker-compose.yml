version: '3.1'

volumes:
    prometheus_data: {}
    grafana_data: {}

networks:
  monitoring:

services:
  jaeger:
    image: jaegertracing/all-in-one
    container_name: makipos-jaeger
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    volumes:
      - /etc/localtime:/etc/localtime:ro    
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 9411:9411
  prometheus:
    image: makipos-prometheus
    build:
      context: './prometheus'
    container_name: makipos-prometheus
    volumes:
      # - /media/Programs/Programs_data/prometheus:/prometheus:rw
      - prometheus_data:/prometheus
      - /etc/localtime:/etc/localtime:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    expose:
      - '9090'
    ports:
      - 9090:9090
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
    depends_on:
      - cadvisor
    networks:
      - monitoring
    restart: always
#    deploy:
#      placement:
#        constraints:
#          - node.hostname == ${HOSTNAME}

  alertmanager:
    image: makipos-alertmanager
    container_name: makipos-alertmanager
    build:
      context: './alertmanager'
    expose:
      - '9093'
    ports:
      - 9093:9093
    volumes:
      - /etc/localtime:/etc/localtime:ro
    networks:
      - monitoring
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
#    deploy:
#      placement:
#        constraints:
#          - node.hostname == ${HOSTNAME}

  grafana:
    image: makipos-grafana
    container_name: makipos-grafana
    build:
      context: './grafana'
    depends_on:
      - prometheus
    ports:
      - 9000:3000
    volumes:
      # - /media/Programs/Programs_data/grafana:/var/lib/grafana:rw
      - grafana_data:/var/lib/grafana
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - ./grafana/config.monitoring
    networks:
      - monitoring
    restart: always

  node-exporter:
    image: prom/node-exporter
    container_name: makipos-node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /etc/localtime:/etc/localtime:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    expose:
      - '9100'
    ports:
      - 9100:9100
    networks:
      - monitoring
    restart: always
    deploy:
      mode: global
  cadvisor:
    image: google/cadvisor
    container_name: makipos-cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /etc/localtime:/etc/localtime:ro
    expose:
      - '8080'
    ports:
      - 8080:8080
    networks:
      - monitoring
    restart: always
    deploy:
      mode: global
